// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	
	// Register to hold the PC state, will load the value
	// presented if _loadpc_ was calculated to be true,
	// otherwise will retain its value.
	Register(in=pcin, load=loadpc, out=out, out=pcout);
	
	// Calculate what the incremented PC would be
	Inc16(in=pcout,out=incpc);
	
	// Determine whether to actually load the value presented to the PC
	Or(a=reset,   b=load, out=loadpc1);
	Or(a=loadpc1, b=inc,  out=loadpc);
	
	// Present either _in_ or the incremented PC to the next decision 
	Mux16(a=incpc, b=in, sel=load, out=pcin1);
	
	// Present 0 (16-bits of false) if reset=true, otherwise present
	// either _in_ or the incremented PC, which ever was chosen.
	Mux16(a=pcin1, b=false, sel=reset, out=pcin);
}
